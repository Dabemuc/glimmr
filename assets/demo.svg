<svg viewBox="0 0 100 272" xmlns="http://www.w3.org/2000/svg">
  <rect fill="#111111" height="100%" rx="0" ry="0" width="100%" />
  <path d="M30,30 v22" fill="none" stroke="#DDDDDD" stroke-width="1" />
  <path d="M30,52 v22 h16" fill="none" stroke="#DDDDDD" stroke-width="1" />
  <path d="M30,96 v22" fill="none" stroke="#DDDDDD" stroke-width="1" />
  <path d="M30,118 v22 h16" fill="none" stroke="#DDDDDD" stroke-width="1" />
  <path d="M30,184 v22" fill="none" stroke="#DDDDDD" stroke-width="1" />
  <path d="M30,206 v22" fill="none" stroke="#DDDDDD" stroke-width="1" />
  <path d="M30,228 v22 h16" fill="none" stroke="#DDDDDD" stroke-width="1" />
  <g class="folder" transform="translate(20,30)">
    <rect class="label-bg" fill="#333333" height="20" rx="2" ry="2" y="-14" />
    <text class="label-text" fill="#FFFFFF" font-family="Arial" font-size="14" x="3">
      fs_parser
</text>
  </g>
  <g class="file" transform="translate(40,52)">
    <rect class="label-bg" fill="#222222" height="20" rx="2" ry="2" y="-14" />
    <text class="label-text" fill="#CCCCCC" font-family="Arial" font-size="14" x="3">
      mod.rs
</text>
  </g>
  <g class="file" transform="translate(40,74)">
    <rect class="label-bg" fill="#222222" height="20" rx="2" ry="2" y="-14" />
    <text class="label-text" fill="#CCCCCC" font-family="Arial" font-size="14" x="3">
      fs_structs.rs
</text>
  </g>
  <g class="folder" transform="translate(20,96)">
    <rect class="label-bg" fill="#333333" height="20" rx="2" ry="2" y="-14" />
    <text class="label-text" fill="#FFFFFF" font-family="Arial" font-size="14" x="3">
      visualize
</text>
  </g>
  <g class="file" transform="translate(40,118)">
    <rect class="label-bg" fill="#222222" height="20" rx="2" ry="2" y="-14" />
    <text class="label-text" fill="#CCCCCC" font-family="Arial" font-size="14" x="3">
      mod.rs
</text>
  </g>
  <g class="folder" transform="translate(40,140)">
    <rect class="label-bg" fill="#333333" height="20" rx="2" ry="2" y="-14" />
    <text class="label-text" fill="#FFFFFF" font-family="Arial" font-size="14" x="3">
      svg_helper
</text>
  </g>
  <g class="file" transform="translate(20,162)">
    <rect class="label-bg" fill="#222222" height="20" rx="2" ry="2" y="-14" />
    <text class="label-text" fill="#CCCCCC" font-family="Arial" font-size="14" x="3">
      main.rs
</text>
  </g>
  <g class="folder" transform="translate(20,184)">
    <rect class="label-bg" fill="#333333" height="20" rx="2" ry="2" y="-14" />
    <text class="label-text" fill="#FFFFFF" font-family="Arial" font-size="14" x="3">
      args
</text>
  </g>
  <g class="file" transform="translate(40,206)">
    <rect class="label-bg" fill="#222222" height="20" rx="2" ry="2" y="-14" />
    <text class="label-text" fill="#CCCCCC" font-family="Arial" font-size="14" x="3">
      mod.rs
</text>
  </g>
  <g class="file" transform="translate(40,228)">
    <rect class="label-bg" fill="#222222" height="20" rx="2" ry="2" y="-14" />
    <text class="label-text" fill="#CCCCCC" font-family="Arial" font-size="14" x="3">
      filetypes.rs
</text>
  </g>
  <g class="folder" transform="translate(40,250)">
    <rect class="label-bg" fill="#333333" height="20" rx="2" ry="2" y="-14" />
    <text class="label-text" fill="#FFFFFF" font-family="Arial" font-size="14" x="3">
      themes
</text>
  </g>
  <script type="application/ecmascript">

    function adjustBoxes() {
    document.querySelectorAll('g.file, g.folder').forEach(group =&gt; {
    const text = group.querySelector('text.label-text');
    const rect = group.querySelector('rect.label-bg');
    if (text &amp;&amp; rect) {
    const bbox = text.getBBox();
    const x_padding = 6;
    const y_padding = 2;
    rect.setAttribute('width', bbox.width + x_padding);
    rect.setAttribute('height', bbox.height + y_padding);
    }
    });
    }

    function adjustViewBox() {
    const svg = document.querySelector('svg');
    let maxWidth = 0;
    document.querySelectorAll('g.file, g.folder').forEach(group =&gt; {
    const groupBBox = group.getBBox();
    const transform = group.transform.baseVal.consolidate().matrix;
    const groupWidth = groupBBox.x + transform.e + groupBBox.width;
    if (groupWidth &gt; maxWidth) {
    maxWidth = groupWidth;
    }
    });

    const currentViewBox = svg.getAttribute('viewBox').split(' ').map(Number);
    const padding = 20;
    svg.setAttribute('viewBox', `0 0 ${maxWidth + padding} ${currentViewBox[3]}`);
    }

    adjustBoxes();
    adjustViewBox();

  </script>
</svg>
